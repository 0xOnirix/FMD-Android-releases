name: Build and Release FMD Android APK

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

    - name: Check if new FMD-Android release
      id: check-fmd-android-release
      run: |
        SOURCE_REPO="fmd-foss%2Ffmd-android"
        TARGET_REPO="${{ github.repository }}"
        SOURCE_TAG=$(curl -s "https://gitlab.com/api/v4/projects/$SOURCE_REPO/repository/tags" | jq -r '.[0].name')
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/$TARGET_REPO/releases/latest" | jq -r '.tag_name' 2>/dev/null || echo "")
        if [ "$SOURCE_TAG" == "$LATEST_RELEASE" ]; then
          echo "STOP=true" >> "$GITHUB_ENV"
        else
          echo "TAG=$SOURCE_TAG" >> "$GITHUB_ENV"
        fi

    - name: Download source from GitLab
      id: download-source
      if: env.STOP != 'true'
      run: |
        mkdir source
        curl -L -o source/fmd-android-$TAG.tar.gz \
          "https://gitlab.com/fmd-foss/fmd-android/-/archive/$TAG/fmd-android-$TAG.tar.gz"
        tar -xzf source/fmd-android-$TAG.tar.gz -C source --strip-components=1

    - name: Build APK
      id: build-apk
      if: env.STOP != 'true'
      run: |
        mkdir apk
        cd source
        ./gradlew clean assembleRelease
        mv app/build/outputs/apk/prod/release/*.apk ../apk/fmd-android-${TAG}-unsigned.apk

    - name: Decode keystore
      id: decode-keystore
      if: env.STOP != 'true'
      run: |
        echo "$SIGNING_KEYSTORE" | base64 --decode > keystore.jks

    - name: Sign APK
      id: sign-apk
      if: env.STOP != 'true'
      run: |
        UNSIGNED_APK=apk/fmd-android-${TAG}-unsigned.apk
        SIGNED_APK="apk/fmd-android-${TAG}-signed.apk"

        echo "Signing $UNSIGNED_APK ..."
        jarsigner -verbose \
          -sigalg SHA256withRSA -digestalg SHA-256 \
          -keystore keystore.jks \
          -storepass "$KEYSTORE_PASSWORD" \
          -keypass "$KEY_PASSWORD" \
          "$UNSIGNED_APK" "$KEY_ALIAS"

        echo "Aligning APK ..."
        zipalign -v 4 "$UNSIGNED_APK" "$SIGNED_APK"
        echo "SIGNED_APK=$SIGNED_APK" >> $GITHUB_ENV

    - name: Create GitHub release
      id: create-release
      if: env.STOP != 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.TAG }}
        name: Release ${{ env.TAG }}
        body: "Automated release from GitLab"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload signed APK
      id: upload-apk
      if: env.STOP != 'true'
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.SIGNED_APK }}
        asset_name: fmd-android-${{ env.TAG }}.apk
        asset_content_type: application/vnd.android.package-archive